name: Build and Release Flutter App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2' # Specify your desired Flutter version
          channel: 'stable'
          cache: true

      - name: Install Linux dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Enable Linux desktop
        run: flutter config --enable-linux-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Linux app
        run: flutter build linux --release

      - name: Create Linux archive
        run: |
          cd build/linux/x64/release/bundle
          tar -czf hello_flutter-linux-x64.tar.gz *

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello_flutter-linux
          path: build/linux/x64/release/bundle/hello_flutter-linux-x64.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2' 
          channel: 'stable'
          cache: true

      - name: Enable Windows desktop
        run: flutter config --enable-windows-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows archive
        run: |
          cd build\windows\x64\runner\Release
          7z a hello_flutter-windows-x64.zip *

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello_flutter-windows
          path: build/windows/x64/runner/Release/hello_flutter-windows-x64.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2' 
          channel: 'stable'
          cache: true

      - name: Enable macOS desktop
        run: flutter config --enable-macos-desktop

      - name: Get dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Build macOS app
        run: flutter build macos --release

      - name: Create macOS archive
        run: |
          cd build/macos/Build/Products/Release
          tar -czf hello_flutter-macos.tar.gz hello_flutter.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: hello_flutter-macos
          path: build/macos/Build/Products/Release/hello_flutter-macos.tar.gz

  release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          find . -name "*.tar.gz" -o -name "*.zip" | head -10

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.tag.outputs.tag }} \
            --title "Release ${{ steps.tag.outputs.tag }}" \
            --notes "## Flutter Desktop App Release ${{ steps.tag.outputs.tag }}
          
          ### Downloads
          - **Linux**: hello_flutter-linux-x64.tar.gz
          - **Windows**: hello_flutter-windows-x64.zip  
          - **macOS**: hello_flutter-macos.tar.gz
          
          ### Installation Instructions
          
          #### Linux
          1. Download \`hello_flutter-linux-x64.tar.gz\`
          2. Extract: \`tar -xzf hello_flutter-linux-x64.tar.gz\`
          3. Run: \`./hello_flutter\`
          
          #### Windows
          1. Download \`hello_flutter-windows-x64.zip\`
          2. Extract the zip file
          3. Run \`hello_flutter.exe\`
          
          #### macOS
          1. Download \`hello_flutter-macos.tar.gz\`
          2. Extract: \`tar -xzf hello_flutter-macos.tar.gz\`
          3. Open \`hello_flutter.app\`" \
            ./hello_flutter-linux/hello_flutter-linux-x64.tar.gz \
            ./hello_flutter-windows/hello_flutter-windows-x64.zip \
            ./hello_flutter-macos/hello_flutter-macos.tar.gz
